Exercise 2.4: Django Views and Templates

Learning Goals

●	Summarize the process of creating views, templates, and URLs 
●	Explain how the “V” and “T” parts of MVT architecture work
●	Create a frontend page for your web application

Reflection Questions

1.	Do some research on Django views. In your own words, use an example to explain how Django views work.
In Django, views handle the logic behind what content is displayed to users when they visit a specific URL.  
Views can be function-based or class-based as well.  
As an example, for the recipe app a view might retrieve a list of recipes from the database and render that list to the user’s browser.

2.	Imagine you’re working on a Django web development project, and you anticipate that you’ll have to reuse lots of code in various parts of the project. In this scenario, will you use Django function-based views or class-based views, and why?

I will use class-based views because they are easy to reuse in other parts of a project and extend, which seems necessary in this project.  
They also reduce the effort spent duplicating or rewriting code. 

3.	 Read Django’s documentation on the Django template language and make some notes on its basics.
Django’s documentation on the Django template language provides a secure and clean way to handle content generation in Django apps.  
It covers things like template syntax, tags, template inheritance, and static files. It’s both secure and emphasizes on simplicity. 
