Reflection Questions

1.	In this Exercise, you learned how to use if-elif-else statements to run different tasks based on conditions that you define. Now practice that skill by writing a script for a simple travel app using an if-elif-else statement for the following situation: 

●	The script should ask the user where they want to travel. 
●	The user’s input should be checked for 3 different travel destinations that you define. 
●	If the user’s input is one of those 3 destinations, the following statement should be printed: “Enjoy your stay in ______!”
●	If the user’s input is something other than the defined destinations, the following statement should be printed: “Oops, that destination is not currently available.”
	
Write your script here. (Hint: remember what you learned about indents!)

destination = input(“Where do you want to travel?”)

if destination == “NYC”:
    print(“Enjoy your stay in NYC!”)
elif destination == “Chicago”
    print(“Enjoy your stay in Chicago!”)
elif destination == “LA”
    print(“Enjoy your stay in LA!”)
else:
    print(“Oops, that destination is not currently available.”)




2.	Imagine you’re at a job interview for a Python developer role. The interviewer says “Explain logical operators in Python”. Draft how you would respond.
There are three logical operators in Python: and, or, not.  They are used to perform logical operations on conditional statements, allowing you to combine or modify Boolean values.  
The “and” operator will only return True if both operands are true, if not it will return False.
The “or” operator will return True if at least one of the operands is true.  It will only return False if both operands are false.
The “not” operator inverts the Boolean value.

3.	What are functions in Python? When and why are they useful?
Functions in Python are reusable blocks of code that perform a specific task or a set of related tasks.  
They are defined with the “def” keyword.  
They are useful when you want to condense steps and save time with a custom function.  
Breaking a program into functions also makes it easier to manage, read, and debug.  They make the code easier to maintain and update and help to avoid code repetition.

4.	In the section for Exercise 1 in this Learning Journal, you were asked in question 3 to set some goals for yourself while you complete this course.  In preparation for your next mentor call, make some notes on how you’ve progressed towards your goals so far.
I have been looking at different resources to increase my understandings of the basics.
Watching Youtube videos to get the more visual part of learning.
Completing the practice exercises throughout the  lessons.